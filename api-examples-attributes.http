# PixelPim API - Attributes & Attribute Groups Examples
# 
# This file contains sample examples for testing the Attributes and Attribute Groups API
# 
# Prerequisites:
# 1. Server running on localhost:3000
# 2. Valid JWT token (replace YOUR_JWT_TOKEN with actual token)

@baseUrl = http://localhost:3000
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoicHJhZ3lhbjE1MTZAZ21haWwuY29tIiwiaWF0IjoxNzU1MDc2Njk2LCJleHAiOjE3NTUxNjMwOTZ9.pQM2bGyQAKPr-NJhfIu7rDK6ygiXHc_qdcTXbXDDTYI

#################################
# ATTRIBUTE TYPES INFORMATION
#################################

### Get Available Attribute Types (User-Friendly)
GET {{baseUrl}}/attributes/types
Authorization: Bearer {{authToken}}

###

#################################
# ATTRIBUTES CRUD OPERATIONS (Using User-Friendly Types)
#################################

### Create Attribute with Short Text (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Brand",
  "type": "Short Text",
  "defaultValue": "Unknown"
}

###

### Create Attribute with Paragraph (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Product Description",
  "type": "Paragraph",
  "defaultValue": "No description available"
}

###

### Create Attribute with HTML (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Rich Description",
  "type": "HTML",
  "defaultValue": "<p>Default HTML content</p>"
}

###

### Create Attribute with Integer (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Quantity",
  "type": "Integer",
  "defaultValue": 0
}

###

### Create Attribute with Decimal (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Price",
  "type": "Decimal",
  "defaultValue": 99.99
}

###

### Create Attribute with Dropdown (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Size",
  "type": "Dropdown",
  "defaultValue": "Medium"
}

###

### Create Attribute with Multiselect (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Features",
  "type": "Multiselect",
  "defaultValue": ["Waterproof", "Wireless"]
}

###

### Create Attribute with Date (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Launch Date",
  "type": "Date",
  "defaultValue": "2024-01-01"
}

###

### Create Attribute with URL (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Product Website",
  "type": "URL",
  "defaultValue": "https://example.com"
}

###

### Create Attribute with Boolean (User-Friendly Type)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Is Featured",
  "type": "Boolean",
  "defaultValue": false
}

###

#################################
# BACKWARD COMPATIBILITY (Using Storage Types)
#################################

### Create Attribute with Storage Type (Backward Compatible)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Legacy Brand",
  "type": "STRING",
  "defaultValue": "Unknown"
}

###

### Get All Attributes
GET {{baseUrl}}/attributes
Authorization: Bearer {{authToken}}

###

### Get Specific Attribute by ID
GET {{baseUrl}}/attributes/1
Authorization: Bearer {{authToken}}

###

### Update Attribute
PATCH {{baseUrl}}/attributes/1
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Product Brand",
  "type": "STRING",
  "defaultValue": "Generic"
}

###

### Delete Attribute
DELETE {{baseUrl}}/attributes/1
Authorization: Bearer {{authToken}}

###

#################################
# ATTRIBUTE GROUPS CRUD OPERATIONS
#################################

### Create Attribute Group
POST {{baseUrl}}/attribute-groups
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Product Information",
  "description": "Essential product attributes",
  "attributes": [
    {
      "attributeId": 10,
      "required": true,
      "defaultValue": "Standard Brand"
    }
  ]
}

###

### Get All Attribute Groups
GET {{baseUrl}}/attribute-groups
Authorization: Bearer {{authToken}}

###

### Get Specific Attribute Group by ID
GET {{baseUrl}}/attribute-groups/1
Authorization: Bearer {{authToken}}

###

### Update Attribute Group
PATCH {{baseUrl}}/attribute-groups/1
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Enhanced Product Information",
  "description": "Updated product attributes"
}

###

### Add Attribute to Group
POST {{baseUrl}}/attribute-groups/1/attributes/3
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "required": true,
  "defaultValue": "default_value"
}

###

### Remove Attribute from Group
DELETE {{baseUrl}}/attribute-groups/1/attributes/3
Authorization: Bearer {{authToken}}

###

### Delete Attribute Group
DELETE {{baseUrl}}/attribute-groups/1
Authorization: Bearer {{authToken}}

###

#################################
# ERROR HANDLING EXAMPLES
#################################

### Duplicate Attribute (409 Conflict)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Brand",
  "type": "STRING"
}

###

### Non-existent Resource (404 Not Found)
GET {{baseUrl}}/attributes/999
Authorization: Bearer {{authToken}}

###

### Invalid Data (400 Bad Request)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Invalid Type Attribute",
  "type": "invalid_type"
}

###

### Type Mismatch Error Example (Corrected)
# PROBLEM: Numeric default value for STRING type
# SOLUTION: Use string default value or let the system convert it
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Description",
  "type": "STRING",
  "defaultValue": "No description available"
}

###

### Type Mismatch Error Example (Auto-conversion)
# The system will now automatically convert numeric 0 to string "0"
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Product Code",
  "type": "STRING",
  "defaultValue": 0
}

###

### Type Mismatch Error Example (INTEGER with string)
# The system will convert string "123" to integer 123
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Stock Quantity",
  "type": "INTEGER",
  "defaultValue": "123"
}

###

### 26. Create Attribute without Default Value (Optional field)
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "SKU",
  "type": "STRING"
}

###

### 27. Create Email Attribute
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Contact Email",
  "type": "EMAIL",
  "defaultValue": "contact@example.com"
}

###

### 28. Create URL Attribute
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Product Website",
  "type": "URL",
  "defaultValue": "https://example.com"
}

###

### 29. Create Color Attribute
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Primary Color",
  "type": "COLOR",
  "defaultValue": "#FF0000"
}

###

### 30. Create JSON Attribute with Object Default
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Product Settings",
  "type": "JSON",
  "defaultValue": {
    "featured": false,
    "inStock": true,
    "categories": ["electronics", "gadgets"],
    "metadata": {
      "weight": 1.5,
      "dimensions": "10x5x2"
    }
  }
}

###

### 31. Create Array Attribute
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Product Tags",
  "type": "ARRAY",
  "defaultValue": ["new", "featured", "bestseller"]
}

###

### 32. Create Percentage Attribute
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Discount Rate",
  "type": "PERCENTAGE",
  "defaultValue": 0.15
}

###

### 33. Create DateTime Attribute
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Last Updated",
  "type": "DATETIME",
  "defaultValue": "2024-01-01T00:00:00Z"
}

###

#################################
# WORKFLOW EXAMPLES
#################################

### 34. Complete Workflow: Create Electronics Product Template

# Step 1: Create Electronics-specific attributes
POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Model Number",
  "type": "STRING",
  "defaultValue": "N/A"
}

###

POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Warranty Period",
  "type": "INTEGER",
  "defaultValue": 12
}

###

POST {{baseUrl}}/attributes
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Power Consumption",
  "type": "NUMBER",
  "defaultValue": 0
}

###

# Step 2: Create Electronics Attribute Group
# Note: Replace attributeId values with actual IDs from previous responses
POST {{baseUrl}}/attribute-groups
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Electronics Products",
  "description": "Attribute group for electronic devices and gadgets",
  "attributes": [
    {
      "attributeId": 1,
      "required": true,
      "defaultValue": "Unknown Brand"
    },
    {
      "attributeId": 6,
      "required": true,
      "defaultValue": "N/A"
    },
    {
      "attributeId": 7,
      "required": false,
      "defaultValue": 12
    },
    {
      "attributeId": 8,
      "required": false,
      "defaultValue": 0
    }
  ]
}

###

### Advanced Workflow: Create Complex Product Attribute Group with Various Types
POST {{baseUrl}}/attribute-groups
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Advanced Product Template",
  "description": "Comprehensive attribute group showcasing all data types",
  "attributes": [
    {
      "attributeId": 1,
      "required": true,
      "defaultValue": "Default Brand"
    },
    {
      "attributeId": 2,
      "required": true,
      "defaultValue": 99.99
    },
    {
      "attributeId": 3,
      "required": false,
      "defaultValue": true
    },
    {
      "attributeId": 5,
      "required": false,
      "defaultValue": ["Electronics", "Gadgets"]
    },
    {
      "attributeId": 9,
      "required": false,
      "defaultValue": "contact@company.com"
    },
    {
      "attributeId": 11,
      "required": false,
      "defaultValue": "#0066CC"
    },
    {
      "attributeId": 12,
      "required": false,
      "defaultValue": {
        "warranty": 24,
        "features": ["waterproof", "wireless"],
        "specs": {
          "battery": "5000mAh",
          "storage": "128GB"
        }
      }
    }
  ]
}