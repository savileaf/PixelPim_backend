### Product Attribute Values API Examples

### Create a product with attributes and values
POST http://localhost:3000/products
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "name": "Test Product with Attribute Values",
  "sku": "TEST-ATTR-001",
  "productLink": "https://example.com/product",
  "imageUrl": "https://example.com/image.jpg",
  "categoryId": 1,
  "attributesWithValues": [
    {
      "attributeId": 1,
      "value": "Custom Red Color"
    },
    {
      "attributeId": 2,
      "value": "Large Size"
    }
  ]
}

### Update product attribute values
PATCH http://localhost:3000/products/1/attributes
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "attributes": [
    {
      "attributeId": 1,
      "value": "Updated Blue Color"
    },
    {
      "attributeId": 2,
      "value": "Medium Size"
    },
    {
      "attributeId": 3,
      "value": "Cotton Material"
    }
  ]
}

### Get product attribute values
GET http://localhost:3000/products/1/attributes
Authorization: Bearer {{jwt_token}}

### Get product details (includes attribute values)
GET http://localhost:3000/products/1
Authorization: Bearer {{jwt_token}}

### Update product with new attribute values
PATCH http://localhost:3000/products/1
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "name": "Updated Product Name",
  "attributesWithValues": [
    {
      "attributeId": 1,
      "value": "Green Color"
    },
    {
      "attributeId": 4,
      "value": "Polyester Material"
    }
  ]
}

### Create product with family and additional attributes with values
POST http://localhost:3000/products
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "name": "Product with Family and Custom Attributes",
  "sku": "FAMILY-ATTR-001",
  "familyId": 1,
  "attributesWithValues": [
    {
      "attributeId": 5,
      "value": "Custom Brand Value"
    },
    {
      "attributeId": 6,
      "value": "Special Edition"
    }
  ]
}

### === Family Attribute Values Examples ===

### Create product with family attribute values
POST http://localhost:3000/products
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "name": "Product with Family Attributes",
  "sku": "FAMILY-PROD-002",
  "familyId": 1,
  "categoryId": 1,
  "familyAttributesWithValues": [
    {
      "familyAttributeId": 1,
      "value": "Family Color Value"
    },
    {
      "familyAttributeId": 2,
      "value": "Family Material Value"
    },
    {
      "familyAttributeId": 3,
      "value": "Family Size Value"
    }
  ]
}

### Update product with both regular and family attribute values
PATCH http://localhost:3000/products/1
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "name": "Updated Product with Mixed Attributes",
  "attributesWithValues": [
    {
      "attributeId": 1,
      "value": "Updated Regular Color"
    },
    {
      "attributeId": 2,
      "value": "Updated Regular Size"
    }
  ],
  "familyAttributesWithValues": [
    {
      "familyAttributeId": 1,
      "value": "Updated Family Color"
    },
    {
      "familyAttributeId": 2,
      "value": "Updated Family Material"
    }
  ]
}

### Get product with family attribute values (shows both regular and family attributes)
GET http://localhost:3000/products/1
Authorization: Bearer {{jwt_token}}

### Create product with only family attributes (no regular attributes)
POST http://localhost:3000/products
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "name": "Family Attributes Only Product",
  "sku": "FAMILY-ONLY-002",
  "familyId": 1,
  "familyAttributesWithValues": [
    {
      "familyAttributeId": 1,
      "value": "Blue"
    },
    {
      "familyAttributeId": 2,
      "value": "Cotton"
    }
  ]
}
