### Product API Examples

@baseUrl = http://localhost:3000
@authToken = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoicHJhZ3lhbjE1MTZAZ21haWwuY29tIiwiaWF0IjoxNzU1MDc2Njk2LCJleHAiOjE3NTUxNjMwOTZ9.pQM2bGyQAKPr-NJhfIu7rDK6ygiXHc_qdcTXbXDDTYI

### 1. Create a new product with minimal data
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: {{authToken}}

{
  "name": "iPhone 15 Pro",
  "sku": "IPHONE15PRO128"
}

### 2. Create a complete product with all relationships
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: {{authToken}}

{
  "name": "Samsung Galaxy S24",
  "sku": "GALAXY-S24-256",
  "productLink": "https://samsung.com/galaxy-s24",
  "imageUrl": "https://example.com/images/galaxy-s24.jpg",
  "status": "complete",
  "categoryId": 1,
  "attributeGroupId": 1,
  "familyId": 1
}

### 3. Create product with only category
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: {{authToken}}

{
  "name": "MacBook Pro M3",
  "sku": "MBP-M3-16-512",
  "productLink": "https://apple.com/macbook-pro",
  "status": "incomplete",
  "categoryId": 1
}

### 4. Get all products
GET {{baseUrl}}/products
Authorization: {{authToken}}

### 5. Get products by status
GET {{baseUrl}}/products?status=complete
Authorization: {{authToken}}

### 6. Get products by status (incomplete)
GET {{baseUrl}}/products?status=incomplete
Authorization: {{authToken}}

### 7. Get products by category
GET {{baseUrl}}/products?categoryId=1
Authorization: {{authToken}}

### 8. Get products by attribute
GET {{baseUrl}}/products?attributeId=1
Authorization: {{authToken}}

### 9. Get products by attribute group
GET {{baseUrl}}/products?attributeGroupId=1
Authorization: {{authToken}}

### 10. Get products by family
GET {{baseUrl}}/products?familyId=1
Authorization: {{authToken}}

### 11. Get products with multiple filters
GET {{baseUrl}}/products?status=complete&categoryId=1&familyId=1
Authorization: {{authToken}}

### 12. Get product by ID
GET {{baseUrl}}/products/1
Authorization: {{authToken}}

### 13. Get product by SKU
GET {{baseUrl}}/products/sku/IPHONE15PRO128
Authorization: {{authToken}}

### 14. Get products by category (alternative endpoint)
GET {{baseUrl}}/products/category/1
Authorization: {{authToken}}

### 15. Get products by attribute (alternative endpoint)
GET {{baseUrl}}/products/attribute/1
Authorization: {{authToken}}

### 16. Get products by attribute group (alternative endpoint)
GET {{baseUrl}}/products/attribute-group/1
Authorization: {{authToken}}

### 17. Get products by family (alternative endpoint)
GET {{baseUrl}}/products/family/1
Authorization: {{authToken}}

### 18. Update product status
PATCH {{baseUrl}}/products/1
Content-Type: application/json
Authorization: {{authToken}}

{
  "status": "complete"
}

### 19. Update product with new relationships
PATCH {{baseUrl}}/products/1
Content-Type: application/json
Authorization: {{authToken}}

{
  "name": "iPhone 15 Pro Max",
  "status": "complete",
  "categoryId": 3
}

### 20. Remove relationships from product
PATCH {{baseUrl}}/products/1
Content-Type: application/json
Authorization: {{authToken}}

{
  "categoryId": null,
  "attributeId": null,
  "attributeGroupId": null,
  "familyId": null
}

### 21. Add attribute group to existing product
PATCH {{baseUrl}}/products/1
Content-Type: application/json
Authorization: {{authToken}}

{
  "attributeGroupId": 2
}

### 22. Delete a product
DELETE {{baseUrl}}/products/1
Authorization: {{authToken}}

### === Test Data Examples ===

### Create Draft Product
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: {{authToken}}

{
  "name": "Generic USB Cable",
  "sku": "USB-CABLE-001",
  "status": "incomplete"
}

### Create Product with Attribute only
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: {{authToken}}

{
  "name": "Wireless Mouse",
  "sku": "MOUSE-WIRELESS-001",
  "attributeId": 1,
  "status": "complete"
}

### Create Product with Family only
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: {{authToken}}

{
  "name": "Gaming Keyboard",
  "sku": "KEYBOARD-GAMING-001",
  "familyId": 2,
  "status": "incomplete"
}
